# {{project_name}}

## Installation

The module is under `src/{{module_name}}`. You can copy this subtree into your
project and then add it to the `package.path` in your Scopes
`_project.sc` file.

### With Spack

This module is available as the `scopes-{{project_name}}` package in the
[snailpacks](https://github.com/salotz/snailpacks) repository. This will pull in the necessary dependencies
including Scopes.

```sh
  spack install scopes-{{project_name}}
```

See the [snailpacks](https://github.com/salotz/snailpacks) documentation for more best practices of installing.

## Development Environment

We use [Spack](https://spack.io/) to install dependencies. First install Spack.

Then you'll need our custom repo of build recipes:

```sh
  mkdir -p `/.spack/repos
  git clone git@github.com:salotz/snailpacks.git `/.spack/repos/snailpacks
  spack repo add `/resources/spack-repos/snailpacks
```

Then you need to create an environment in this folder that will
contain the headers and libraries etc.

```sh
  spack env create -d .
```

Activate the environment (i.e. set the environment variables
appropriately) and install the packages:

```sh
  spacktivate .
  spack install
```

Note that the first time running this could take quite a while since
Spack actually compiles *all* of the dependencies from scratch and
doesn't use your system packages at all. The biggest of these being
LLVM, if you haven't already installed Scopes with Spack. This only
needs to be done once per LLVM version.

At this point you can run examples etc. providing the `-p` flag:

```sh
  scopes -p ./examples/001_core_basic_window.sc
```

To exit the environment (i.e. unset the env variables):

```sh
  despacktivate
```
